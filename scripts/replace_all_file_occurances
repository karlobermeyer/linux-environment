#!/usr/bin/env python

'''Find recursively all instances of a file, say foo.bar, in the current
directory tree, and replace each with a copy of the file biz.baz.

Command-line usage:
$ replace_all_file_occurances foo.bar ./biz.baz

TODO: Use argparse to add command line flags for
  interactive mode
  dry run
  verbose
'''

# Standard
import sys
import os
import shutil
# import re
#from pprint import pprint
import time
# start_time = time.time()
# . . .
# print 'Elapsed time =', time.time() - start_time, 's'


def main():

    start_time = time.time()

    filename_old = sys.argv[1]
    filename_new = sys.argv[2]
    verbose = False

    # Find files
    for dirpath, dirnames, filenames in os.walk('.'):
        for filename in filenames:
            if filename == filename_old:
                filename_with_path = os.path.join(dirpath, filename)

                if verbose:
                    print '\nremoving ' + filename_with_path
                os.remove(filename_with_path)

                if verbose:
                    print 'copying ' + filename_new + ' to ' + dirpath
                shutil.copy(filename_new, dirpath)

    print '\nElapsed time =', time.time() - start_time, 's'


if __name__ == "__main__":
    main()
